<?xml version="1.0" encoding="UTF-8"?>
<!-- ~ Copyright 2016 Microprofile.io ~ ~ Licensed under the Apache License, 
	Version 2.0 (the "License"); ~ you may not use this file except in compliance 
	with the License. ~ You may obtain a copy of the License at ~ ~ http://www.apache.org/licenses/LICENSE-2.0 
	~ ~ Unless required by applicable law or agreed to in writing, software ~ 
	distributed under the License is distributed on an "AS IS" BASIS, ~ WITHOUT 
	WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. ~ See the 
	License for the specific language governing permissions and ~ limitations 
	under the License. -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>sample.microservicebuilder</groupId>
	<version>1.0.0-SNAPSHOT</version>
	<artifactId>microservice-schedule</artifactId>
	<packaging>war</packaging>
	<name>Conference :: Schedule</name>

	<properties>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<!--<docker.file.dir>artifacts</docker.file.dir> <webxml.path></webxml.path> -->
	</properties>

	<repositories>
		<repository>
			<id>jitpack.io</id>
			<url>https://jitpack.io</url>
		</repository>
	</repositories>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>3.0.0</version>
				<configuration>
					<webXml>${webxml.path}</webXml>
					<failOnMissingWebXml>false</failOnMissingWebXml>
					<packagingExcludes>pom.xml</packagingExcludes>
				</configuration>
			</plugin>
    <!-- <properties>
      <maven.compiler.source>1.8</maven.compiler.source>
      <maven.compiler.target>1.8</maven.compiler.target>
      <docker.file.dir>artifacts</docker.file.dir>
      <webxml.path></webxml.path>
    </properties> -->
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<configuration>
					<images>
						<image>
							<name>microservice-schedule</name>
							<build>
								<dockerFileDir>${docker.file.dir}</dockerFileDir>
								<assembly>
									<descriptorRef>artifact</descriptorRef>
								</assembly>
							</build>
						</image>
					</images>
				</configuration>
			</plugin>
		</plugins>
	</build>


	<dependencies>
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-api</artifactId>
			<scope>provided</scope>
			<version>7.0</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>2.8.2</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.github.wasdev.microprofile-conference</groupId>
			<artifactId>demo-bootstrap</artifactId>
			<version>1.0.0</version>
		</dependency>
		<dependency>
			<groupId>org.wildfly.swarm</groupId>
			<artifactId>microprofile</artifactId>
			<scope>provided</scope>
			<version>2016.10.0</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.microprofile.config</groupId>
			<artifactId>microprofile-config-api</artifactId>
			<version>1.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.microprofile.metrics</groupId>
			<artifactId>microprofile-metrics-api</artifactId>
			<version>1.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.microprofile.health</groupId>
			<artifactId>microprofile-health-api</artifactId>
			<version>1.0</version>
			<scope>provided</scope>
		</dependency>
    </dependencies>
    
	<!-- The code in 'profiles' has the task of copying the right Dockerfile to the root directory. It's very verbose :( 
	    The 'secure' profile also adds a web.xml into the packaged war file. -->
    <profiles>  
	     <profile>
			<id>normal - insecure</id>
			<activation>
    			<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>    
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<version>2.7</version>
						<executions>
							<execution>
								<id>getInsecureDockerfile</id>
								<phase>package</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${basedir}</outputDirectory>
									<overwrite>true</overwrite>
									<resources>
										<resource>
											<directory>${basedir}/dockerfiles/insecure</directory>
											<includes>
												<include>Dockerfile</include>
											</includes>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

        <profile>
            <id>security</id>
            <properties>
                <webxml.path>src/main/liberty/webapp-security/web.xml</webxml.path>                    
            </properties>  
			<build>
				<plugins>    
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<version>2.7</version>
						<executions>
							<execution>
								<id>getSecureDockerfile</id>
								<phase>package</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${basedir}</outputDirectory>
									<overwrite>true</overwrite>
									<resources>
										<resource>
											<directory>${basedir}/dockerfiles/secure</directory>
											<includes>
												<include>Dockerfile</include>
											</includes>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
        </profile>         
    </profiles>
</project>
